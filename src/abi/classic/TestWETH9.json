{
    "contractName": "TestWETH9",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "name_",
                    "type": "string"
                },
                {
                    "internalType": "string",
                    "name": "symbol_",
                    "type": "string"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "allowance",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "needed",
                    "type": "uint256"
                }
            ],
            "name": "ERC20InsufficientAllowance",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "balance",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "needed",
                    "type": "uint256"
                }
            ],
            "name": "ERC20InsufficientBalance",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "approver",
                    "type": "address"
                }
            ],
            "name": "ERC20InvalidApprover",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "receiver",
                    "type": "address"
                }
            ],
            "name": "ERC20InvalidReceiver",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                }
            ],
            "name": "ERC20InvalidSender",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                }
            ],
            "name": "ERC20InvalidSpender",
            "type": "error"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                }
            ],
            "name": "depositTo",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "withdrawTo",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                }
            ],
            "name": "allowance",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "decimals",
            "outputs": [
                {
                    "internalType": "uint8",
                    "name": "",
                    "type": "uint8"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "deposit",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "transfer",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_amount",
                    "type": "uint256"
                }
            ],
            "name": "withdraw",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"depositTo\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"c:/Contracts/token-bridge-contracts-main/token-bridge-contracts-main/contracts/tokenbridge/test/TestWETH9.sol\":\"TestWETH9\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"c:/Contracts/token-bridge-contracts-main/token-bridge-contracts-main/contracts/tokenbridge/libraries/IWETH9.sol\":{\"keccak256\":\"0xebe5298114747f879f5105ac358093f5ce47c51027d5fbc9ec25f6f942bd0332\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://54be4c27fa8aa916534116134972bde30380b37236ad0515c6b9ee04d609d297\",\"dweb:/ipfs/QmchZauqoNYiEa77MQV2YSAijn9VefRQcgmgomyrVKz8Q8\"]},\"c:/Contracts/token-bridge-contracts-main/token-bridge-contracts-main/contracts/tokenbridge/test/TestWETH9.sol\":{\"keccak256\":\"0x3c6217848e34d06942cf379ddd36391947115df5fd7d220228a41c32aa9ec53e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7c6ff58178a461baf8cd757b3f68fd8d9946b207700c352ee3db684b5bd1747f\",\"dweb:/ipfs/QmVF6NXmiLZteQvFSvMoFTcfab1WiMbYqqPWmW9vS7W7hj\"]},\"c:/Contracts/token-bridge-contracts-main/token-bridge-contracts-main/node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"c:/Contracts/token-bridge-contracts-main/token-bridge-contracts-main/node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"c:/Contracts/token-bridge-contracts-main/token-bridge-contracts-main/node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"c:/Contracts/token-bridge-contracts-main/token-bridge-contracts-main/node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xbfb6695731de677140fbf76c772ab08c4233a122fb51ac28ac120fc49bbbc4ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68f8fded7cc318efa15874b7c6a983fe17a4a955d72d240353a9a4ca1e1b824c\",\"dweb:/ipfs/QmdcmBL9Qo4Tk3Dby4wFYabGyot9JNeLPxpSXZUgUm92BV\"]},\"c:/Contracts/token-bridge-contracts-main/token-bridge-contracts-main/node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"c:/Contracts/token-bridge-contracts-main/token-bridge-contracts-main/node_modules/@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"c:/Contracts/token-bridge-contracts-main/token-bridge-contracts-main/node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"c:/Contracts/token-bridge-contracts-main/token-bridge-contracts-main/node_modules/@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":{\"keccak256\":\"0x371c3467dccfbb2ac03b0edb4fadaacb9ad382772cee7850a3e73f39a56d102c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3574f1cc3ff2cb985a1385949bd3c76888e8dcf59e6a770ccb15c79b145b39bb\",\"dweb:/ipfs/QmXZDrFibUAMqjoRrpKxV3ma5RR9YfJXZyMrLWJ3bix9gi\"]},\"c:/Contracts/token-bridge-contracts-main/token-bridge-contracts-main/node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0xbc9babed4d136e6cc1e74354aa66538a234f3808645fbe30463b4a7b7d8ca789\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75fd9323b206da2a87924fca2ca996dbd04ae0963f79f66fb8a0ef94bf283a3d\",\"dweb:/ipfs/QmYSoLcvpq8gRo8doLP4nnB43UAT1D3KvfFJRDSD2y4nYu\"]},\"c:/Contracts/token-bridge-contracts-main/token-bridge-contracts-main/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"c:/Contracts/token-bridge-contracts-main/token-bridge-contracts-main/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"c:/Contracts/token-bridge-contracts-main/token-bridge-contracts-main/node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"c:/Contracts/token-bridge-contracts-main/token-bridge-contracts-main/node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"c:/Contracts/token-bridge-contracts-main/token-bridge-contracts-main/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"c:/Contracts/token-bridge-contracts-main/token-bridge-contracts-main/node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
    "bytecode": "60806040523461031057610b2e8038038061001981610314565b9283398101906040818303126103105780516001600160401b0381116103105782610045918301610339565b60208201519092906001600160401b038111610310576100659201610339565b81516001600160401b03811161022357600354600181811c91168015610306575b602082101461020557601f81116102a3575b50602092601f821160011461024257928192935f92610237575b50508160011b915f199060031b1c1916176003555b80516001600160401b03811161022357600454600181811c91168015610219575b602082101461020557601f81116101a2575b50602091601f8211600114610142579181925f92610137575b50508160011b915f199060031b1c1916176004555b6040516107a3908161038b8239f35b015190505f80610113565b601f1982169260045f52805f20915f5b85811061018a57508360019510610172575b505050811b01600455610128565b01515f1960f88460031b161c191690555f8080610164565b91926020600181928685015181550194019201610152565b60045f527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f830160051c810191602084106101fb575b601f0160051c01905b8181106101f057506100fa565b5f81556001016101e3565b90915081906101da565b634e487b7160e01b5f52602260045260245ffd5b90607f16906100e8565b634e487b7160e01b5f52604160045260245ffd5b015190505f806100b2565b601f1982169360035f52805f20915f5b86811061028b5750836001959610610273575b505050811b016003556100c7565b01515f1960f88460031b161c191690555f8080610265565b91926020600181928685015181550194019201610252565b60035f527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f830160051c810191602084106102fc575b601f0160051c01905b8181106102f15750610098565b5f81556001016102e4565b90915081906102db565b90607f1690610086565b5f80fd5b6040519190601f01601f191682016001600160401b0381118382101761022357604052565b81601f82011215610310578051906001600160401b03821161022357610368601f8301601f1916602001610314565b928284526020838301011161031057815f9260208093018386015e830101529056fe6080806040526004361015610012575f80fd5b5f3560e01c90816306fdde03146105b157508063095ea7b31461052f57806318160ddd1461051257806323b872dd146104325780632e1a7d4d14610339578063313ce5671461031e57806370a08231146102e757806395d89b41146101cc578063a9059cbb1461019b578063d0e30db0146100e95763dd62ed3e14610095575f80fd5b346100e55760403660031901126100e5576100ae6106aa565b6100b66106c0565b6001600160a01b039182165f908152600160209081526040808320949093168252928352819020549051908152f35b5f80fd5b5f3660031901126100e55733156101885760025434810180911161017457600255335f525f60205260405f203481540190556040513481525f7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60203393a37fb760faf9af37da13e9ad203810b6252dd72715435b4a870154ce2f10c7fff6726020604051338152a1005b634e487b7160e01b5f52601160045260245ffd5b63ec442f0560e01b5f525f60045260245ffd5b346100e55760403660031901126100e5576101c16101b76106aa565b60243590336106d6565b602060405160018152f35b346100e5575f3660031901126100e5576040515f6004548060011c906001811680156102dd575b6020831081146102c9578285529081156102ad5750600114610258575b50819003601f01601f191681019067ffffffffffffffff8211818310176102445761024082918260405282610680565b0390f35b634e487b7160e01b5f52604160045260245ffd5b905060045f527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5f905b82821061029757506020915082010182610210565b6001816020925483858801015201910190610282565b90506020925060ff191682840152151560051b82010182610210565b634e487b7160e01b5f52602260045260245ffd5b91607f16916101f3565b346100e55760203660031901126100e5576001600160a01b036103086106aa565b165f525f602052602060405f2054604051908152f35b346100e5575f3660031901126100e557602060405160128152f35b346100e55760203660031901126100e557600435331561041f57335f525f6020528060405f205481811061040657335f525f6020520360405f205580600254036002555f6040518281527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60203392a3805f81156103fd575b5f80809381933390f1156103f25760407f205c2878e2b9718d4efa336821ca468d100691993725642feda873d86ff02469918151903382526020820152a1005b6040513d5f823e3d90fd5b506108fc6103b2565b63391434e360e21b5f523360045260245260445260645ffd5b634b637e8f60e11b5f525f60045260245ffd5b346100e55760603660031901126100e55761044b6106aa565b6104536106c0565b6001600160a01b0382165f818152600160208181526040808420338552909152909120549193604435939290918101610492575b506101c193506106d6565b8381106104f75784156104e45733156104d1576101c1945f52600160205260405f2060018060a01b0333165f526020528360405f209103905584610487565b634a1406b160e11b5f525f60045260245ffd5b63e602df0560e01b5f525f60045260245ffd5b8390637dc7a0d960e11b5f523360045260245260445260645ffd5b346100e5575f3660031901126100e5576020600254604051908152f35b346100e55760403660031901126100e5576105486106aa565b6024359033156104e4576001600160a01b03169081156104d157335f52600160205260405f20825f526020528060405f20556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b346100e5575f3660031901126100e5575f6003548060011c90600181168015610676575b6020831081146102c9578285529081156102ad57506001146106215750819003601f01601f191681019067ffffffffffffffff8211818310176102445761024082918260405282610680565b905060035f527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5f905b82821061066057506020915082010182610210565b600181602092548385880101520191019061064b565b91607f16916105d5565b602060409281835280519182918282860152018484015e5f828201840152601f01601f1916010190565b600435906001600160a01b03821682036100e557565b602435906001600160a01b03821682036100e557565b6001600160a01b031690811561041f576001600160a01b031691821561018857815f525f60205260405f205481811061075457817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92602092855f525f84520360405f2055845f525f825260405f20818154019055604051908152a3565b8263391434e360e21b5f5260045260245260445260645ffdfea2646970667358221220986575450e0daafd9d12028771cbde2cecb81f76eb391ea4dfb9776c78132f9e64736f6c634300081b0033",
    "deployedBytecode": "6080806040526004361015610012575f80fd5b5f3560e01c90816306fdde03146105b157508063095ea7b31461052f57806318160ddd1461051257806323b872dd146104325780632e1a7d4d14610339578063313ce5671461031e57806370a08231146102e757806395d89b41146101cc578063a9059cbb1461019b578063d0e30db0146100e95763dd62ed3e14610095575f80fd5b346100e55760403660031901126100e5576100ae6106aa565b6100b66106c0565b6001600160a01b039182165f908152600160209081526040808320949093168252928352819020549051908152f35b5f80fd5b5f3660031901126100e55733156101885760025434810180911161017457600255335f525f60205260405f203481540190556040513481525f7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60203393a37fb760faf9af37da13e9ad203810b6252dd72715435b4a870154ce2f10c7fff6726020604051338152a1005b634e487b7160e01b5f52601160045260245ffd5b63ec442f0560e01b5f525f60045260245ffd5b346100e55760403660031901126100e5576101c16101b76106aa565b60243590336106d6565b602060405160018152f35b346100e5575f3660031901126100e5576040515f6004548060011c906001811680156102dd575b6020831081146102c9578285529081156102ad5750600114610258575b50819003601f01601f191681019067ffffffffffffffff8211818310176102445761024082918260405282610680565b0390f35b634e487b7160e01b5f52604160045260245ffd5b905060045f527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5f905b82821061029757506020915082010182610210565b6001816020925483858801015201910190610282565b90506020925060ff191682840152151560051b82010182610210565b634e487b7160e01b5f52602260045260245ffd5b91607f16916101f3565b346100e55760203660031901126100e5576001600160a01b036103086106aa565b165f525f602052602060405f2054604051908152f35b346100e5575f3660031901126100e557602060405160128152f35b346100e55760203660031901126100e557600435331561041f57335f525f6020528060405f205481811061040657335f525f6020520360405f205580600254036002555f6040518281527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60203392a3805f81156103fd575b5f80809381933390f1156103f25760407f205c2878e2b9718d4efa336821ca468d100691993725642feda873d86ff02469918151903382526020820152a1005b6040513d5f823e3d90fd5b506108fc6103b2565b63391434e360e21b5f523360045260245260445260645ffd5b634b637e8f60e11b5f525f60045260245ffd5b346100e55760603660031901126100e55761044b6106aa565b6104536106c0565b6001600160a01b0382165f818152600160208181526040808420338552909152909120549193604435939290918101610492575b506101c193506106d6565b8381106104f75784156104e45733156104d1576101c1945f52600160205260405f2060018060a01b0333165f526020528360405f209103905584610487565b634a1406b160e11b5f525f60045260245ffd5b63e602df0560e01b5f525f60045260245ffd5b8390637dc7a0d960e11b5f523360045260245260445260645ffd5b346100e5575f3660031901126100e5576020600254604051908152f35b346100e55760403660031901126100e5576105486106aa565b6024359033156104e4576001600160a01b03169081156104d157335f52600160205260405f20825f526020528060405f20556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b346100e5575f3660031901126100e5575f6003548060011c90600181168015610676575b6020831081146102c9578285529081156102ad57506001146106215750819003601f01601f191681019067ffffffffffffffff8211818310176102445761024082918260405282610680565b905060035f527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5f905b82821061066057506020915082010182610210565b600181602092548385880101520191019061064b565b91607f16916105d5565b602060409281835280519182918282860152018484015e5f828201840152601f01601f1916010190565b600435906001600160a01b03821682036100e557565b602435906001600160a01b03821682036100e557565b6001600160a01b031690811561041f576001600160a01b031691821561018857815f525f60205260405f205481811061075457817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92602092855f525f84520360405f2055845f525f825260405f20818154019055604051908152a3565b8263391434e360e21b5f5260045260245260445260645ffdfea2646970667358221220986575450e0daafd9d12028771cbde2cecb81f76eb391ea4dfb9776c78132f9e64736f6c634300081b0033",
    "sourceMap": "387:557:1:-:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;387:557:1;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;387:557:1;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;387:557:1;;;;1962:13:11;387:557:1;;;;;;;;;;;-1:-1:-1;387:557:1;;;;;;;;;;;-1:-1:-1;387:557:1;;;;;;;;;;;;;;-1:-1:-1;387:557:1;;;;;;;;;;;;;1962:13:11;387:557:1;;;;;1962:13:11;387:557:1;;;;-1:-1:-1;;;;;387:557:1;;;;1985:17:11;387:557:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;387:557:1;;;;;;;;;;;;;1962:13:11;387:557:1;;;;;1985:17:11;387:557:1;;;;;;;;;;;;;;;-1:-1:-1;387:557:1;;;;;;;;;;1985:17:11;-1:-1:-1;387:557:1;;-1:-1:-1;387:557:1;;-1:-1:-1;387:557:1;;;;;;;;;;;;;;;;;;;;1985:17:11;387:557:1;;;;;;;;;;1962:13:11;387:557:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1985:17:11;-1:-1:-1;387:557:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;387:557:1;;;;;;;;;-1:-1:-1;387:557:1;;;;;;;;-1:-1:-1;387:557:1;;1985:17:11;387:557:1;;-1:-1:-1;387:557:1;;;;;;;;;;;;-1:-1:-1;387:557:1;;1985:17:11;387:557:1;;-1:-1:-1;387:557:1;;;;;-1:-1:-1;387:557:1;;;;;;;;;;1962:13:11;-1:-1:-1;387:557:1;;-1:-1:-1;387:557:1;;-1:-1:-1;387:557:1;;;;;;;;;;;;;;;;;;;;;1962:13:11;387:557:1;;;;;;;;;;1962:13:11;387:557:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:13:11;-1:-1:-1;387:557:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;387:557:1;;;;;;;;;-1:-1:-1;387:557:1;;;;;;;;;;;;-1:-1:-1;387:557:1;;;;;;;;;-1:-1:-1;;387:557:1;;;-1:-1:-1;;;;;387:557:1;;;;;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;;;;387:557:1;;;;;;;;-1:-1:-1;;387:557:1;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;387:557:1;;;;;;;;;;;;;;:::o",
    "deployedSourceMap": "387:557:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;387:557:1;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;387:557:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;387:557:1;;;;673:10;7791:21:11;7787:91;;6496:21;387:557:1;685:9;387:557;;;;;;;6496:21:11;387:557:1;673:10;387:557;;;;;;;;685:9;387:557;;;;;;;685:9;387:557;;;7346:25:11;387:557:1;673:10;7346:25:11;;710:21:1;387:557;;;673:10;387:557;;710:21;387:557;;;;;;;;;;;;;7787:91:11;7835:32;;;387:557:1;7835:32:11;387:557:1;;;;;7835:32:11;387:557:1;;;;;;-1:-1:-1;;387:557:1;;;;3754:5:11;387:557:1;;:::i;:::-;;;735:10:15;;3754:5:11;:::i;:::-;387:557:1;;;;;;;;;;;;;-1:-1:-1;;387:557:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;387:557:1;;;;;-1:-1:-1;;387:557:1;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;387:557:1;;;;-1:-1:-1;;;;;387:557:1;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;387:557:1;;;;;;;3075:2:11;387:557:1;;;;;;;;;-1:-1:-1;;387:557:1;;;;;;813:10;8317:21:11;8313:89;;813:10:1;387:557;;;;;;;;;;6603:19:11;;;6599:115;;813:10:1;387:557;;;;;;;;;;;7073:21:11;387:557:1;;7073:21:11;387:557:1;;;;;;;7346:25:11;387:557:1;813:10;7346:25:11;;843:46:1;387:557;843:46;;;;387:557;;813:10;;;;;;843:46;;;;;387:557;904:31;387:557;;;813:10;;387:557;;;;;;904:31;387:557;843:46;387:557;;;;;;;;;843:46;-1:-1:-1;843:46:1;;;6599:115:11;6649:50;;;387:557:1;6649:50:11;813:10:1;387:557;;;;;;;;6649:50:11;8313:89;8361:30;;;387:557:1;8361:30:11;387:557:1;;;;;8361:30:11;387:557:1;;;;;;-1:-1:-1;;387:557:1;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;387:557:1;;;;;;;;;;;;;;;735:10:15;387:557:1;;;;;;;;;;;;;;;;;10828:37:11;;10824:310;;387:557:1;5249:5:11;;;;;:::i;10824:310::-;10885:24;;;10881:130;;10061:19;;10057:89;;735:10:15;10159:21:11;10155:90;;5249:5;387:557:1;;;;;;;;;;;;;;735:10:15;387:557:1;-1:-1:-1;387:557:1;;;;;-1:-1:-1;387:557:1;;;;;10824:310:11;;;10155:90;10203:31;;;387:557:1;10203:31:11;387:557:1;;;;;10203:31:11;10057:89;10103:32;;;387:557:1;10103:32:11;387:557:1;;;;;10103:32:11;10881:130;10936:60;;;;;387:557:1;10936:60:11;735:10:15;387:557:1;;;;;;;;10936:60:11;387:557:1;;;;;;-1:-1:-1;;387:557:1;;;;;3222:12:11;387:557:1;;;;;;;;;;;;;-1:-1:-1;;387:557:1;;;;;;:::i;:::-;;;735:10:15;;10061:19:11;10057:89;;-1:-1:-1;;;;;387:557:1;;10159:21:11;;10155:90;;735:10:15;387:557:1;;;;;;;;;-1:-1:-1;387:557:1;;;;;-1:-1:-1;387:557:1;;;;;;;10333:31:11;387:557:1;735:10:15;10333:31:11;;387:557:1;;;;;;;;;;;;;-1:-1:-1;;387:557:1;;;;;2151:5:11;387:557:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;387:557:1;;;;;-1:-1:-1;;387:557:1;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;2151:5:11;387:557:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;387:557:1;;;;:::o;:::-;;;;-1:-1:-1;;;;;387:557:1;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;387:557:1;;;;;;:::o;5656:300:11:-;-1:-1:-1;;;;;387:557:1;;5739:18:11;;5735:86;;-1:-1:-1;;;;;387:557:1;;5834:16:11;;5830:86;;387:557:1;5755:1:11;387:557:1;5755:1:11;387:557:1;;;5755:1:11;387:557:1;;6603:19:11;;;6599:115;;387:557:1;7346:25:11;387:557:1;;;;5755:1:11;387:557:1;5755:1:11;387:557:1;;;;5755:1:11;387:557:1;;;5755:1:11;387:557:1;5755:1:11;387:557:1;;;5755:1:11;387:557:1;;;;;;;;;;;;7346:25:11;5656:300::o;6599:115::-;6649:50;;;;5755:1;6649:50;;387:557:1;;;;;;5755:1:11;6649:50",
    "sourcePath": "c:/Contracts/token-bridge-contracts-main/token-bridge-contracts-main/contracts/tokenbridge/test/TestWETH9.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.27+commit.40a35a09"
    },
    "ast": {
        "absolutePath": "c:/Contracts/token-bridge-contracts-main/token-bridge-contracts-main/contracts/tokenbridge/test/TestWETH9.sol",
        "exportedSymbols": {
            "Context": [
                1868
            ],
            "ERC20": [
                1481
            ],
            "IERC20": [
                1559
            ],
            "IERC20Errors": [
                301
            ],
            "IERC20Metadata": [
                1585
            ],
            "ITransparentUpgradeableProxy": [
                852
            ],
            "IWETH9": [
                10
            ],
            "Ownable": [
                238
            ],
            "ProxyAdmin": [
                831
            ],
            "TestWETH9": [
                90
            ]
        },
        "id": 91,
        "license": "Apache-2.0",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 12,
                "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "40:23:1"
            },
            {
                "absolutePath": "c:/Contracts/token-bridge-contracts-main/token-bridge-contracts-main/contracts/tokenbridge/libraries/IWETH9.sol",
                "file": "../libraries/IWETH9.sol",
                "id": 13,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 91,
                "sourceUnit": 11,
                "src": "65:33:1",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "c:/Contracts/token-bridge-contracts-main/token-bridge-contracts-main/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
                "file": "c:/Contracts/token-bridge-contracts-main/token-bridge-contracts-main/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
                "id": 14,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 91,
                "sourceUnit": 1482,
                "src": "99:137:1",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "c:/Contracts/token-bridge-contracts-main/token-bridge-contracts-main/node_modules/@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol",
                "file": "c:/Contracts/token-bridge-contracts-main/token-bridge-contracts-main/node_modules/@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol",
                "id": 15,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 91,
                "sourceUnit": 832,
                "src": "237:148:1",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 16,
                            "name": "ERC20",
                            "nameLocations": [
                                "409:5:1"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1481,
                            "src": "409:5:1"
                        },
                        "id": 17,
                        "nodeType": "InheritanceSpecifier",
                        "src": "409:5:1"
                    },
                    {
                        "baseName": {
                            "id": 18,
                            "name": "IWETH9",
                            "nameLocations": [
                                "416:6:1"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 10,
                            "src": "416:6:1"
                        },
                        "id": 19,
                        "nodeType": "InheritanceSpecifier",
                        "src": "416:6:1"
                    }
                ],
                "canonicalName": "TestWETH9",
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 90,
                "linearizedBaseContracts": [
                    90,
                    10,
                    1481,
                    301,
                    1585,
                    1559,
                    1868
                ],
                "name": "TestWETH9",
                "nameLocation": "396:9:1",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "body": {
                            "id": 30,
                            "nodeType": "Block",
                            "src": "507:2:1",
                            "statements": []
                        },
                        "id": 31,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "id": 26,
                                        "name": "name_",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 21,
                                        "src": "491:5:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                        }
                                    },
                                    {
                                        "id": 27,
                                        "name": "symbol_",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 23,
                                        "src": "498:7:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                        }
                                    }
                                ],
                                "id": 28,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 25,
                                    "name": "ERC20",
                                    "nameLocations": [
                                        "485:5:1"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1481,
                                    "src": "485:5:1"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "485:21:1"
                            }
                        ],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 24,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 21,
                                    "mutability": "mutable",
                                    "name": "name_",
                                    "nameLocation": "455:5:1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 31,
                                    "src": "441:19:1",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 20,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "441:6:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 23,
                                    "mutability": "mutable",
                                    "name": "symbol_",
                                    "nameLocation": "476:7:1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 31,
                                    "src": "462:21:1",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 22,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "462:6:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "440:44:1"
                        },
                        "returnParameters": {
                            "id": 29,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "507:0:1"
                        },
                        "scope": 90,
                        "src": "429:80:1",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "anonymous": false,
                        "eventSelector": "b760faf9af37da13e9ad203810b6252dd72715435b4a870154ce2f10c7fff672",
                        "id": 35,
                        "name": "depositTo",
                        "nameLocation": "525:9:1",
                        "nodeType": "EventDefinition",
                        "parameters": {
                            "id": 34,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 33,
                                    "indexed": false,
                                    "mutability": "mutable",
                                    "name": "sender",
                                    "nameLocation": "543:6:1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 35,
                                    "src": "535:14:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 32,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "535:7:1",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "534:16:1"
                        },
                        "src": "519:32:1"
                    },
                    {
                        "anonymous": false,
                        "eventSelector": "205c2878e2b9718d4efa336821ca468d100691993725642feda873d86ff02469",
                        "id": 41,
                        "name": "withdrawTo",
                        "nameLocation": "563:10:1",
                        "nodeType": "EventDefinition",
                        "parameters": {
                            "id": 40,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 37,
                                    "indexed": false,
                                    "mutability": "mutable",
                                    "name": "sender",
                                    "nameLocation": "582:6:1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 41,
                                    "src": "574:14:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 36,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "574:7:1",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 39,
                                    "indexed": false,
                                    "mutability": "mutable",
                                    "name": "amount",
                                    "nameLocation": "598:6:1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 41,
                                    "src": "590:14:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 38,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "590:7:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "573:32:1"
                        },
                        "src": "557:49:1"
                    },
                    {
                        "baseFunctions": [
                            4
                        ],
                        "body": {
                            "id": 57,
                            "nodeType": "Block",
                            "src": "657:81:1",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 46,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "673:3:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 47,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "677:6:1",
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "673:10:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "expression": {
                                                    "id": 48,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "685:3:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 49,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "689:5:1",
                                                "memberName": "value",
                                                "nodeType": "MemberAccess",
                                                "src": "685:9:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 45,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1321,
                                            "src": "667:5:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 50,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "667:28:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 51,
                                    "nodeType": "ExpressionStatement",
                                    "src": "667:28:1"
                                },
                                {
                                    "eventCall": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 53,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "720:3:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 54,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "724:6:1",
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "720:10:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "id": 52,
                                            "name": "depositTo",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 35,
                                            "src": "710:9:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                                                "typeString": "function (address)"
                                            }
                                        },
                                        "id": 55,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "710:21:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 56,
                                    "nodeType": "EmitStatement",
                                    "src": "705:26:1"
                                }
                            ]
                        },
                        "functionSelector": "d0e30db0",
                        "id": 58,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "deposit",
                        "nameLocation": "621:7:1",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 43,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "648:8:1"
                        },
                        "parameters": {
                            "id": 42,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "628:2:1"
                        },
                        "returnParameters": {
                            "id": 44,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "657:0:1"
                        },
                        "scope": 90,
                        "src": "612:126:1",
                        "stateMutability": "payable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "baseFunctions": [
                            9
                        ],
                        "body": {
                            "id": 88,
                            "nodeType": "Block",
                            "src": "797:145:1",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 65,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "813:3:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 66,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "817:6:1",
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "813:10:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 67,
                                                "name": "_amount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 60,
                                                "src": "825:7:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 64,
                                            "name": "_burn",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1354,
                                            "src": "807:5:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 68,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "807:26:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 69,
                                    "nodeType": "ExpressionStatement",
                                    "src": "807:26:1"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 79,
                                                "name": "_amount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 60,
                                                "src": "881:7:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "arguments": [
                                                            {
                                                                "expression": {
                                                                    "id": 74,
                                                                    "name": "msg",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 4294967281,
                                                                    "src": "859:3:1",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_magic_message",
                                                                        "typeString": "msg"
                                                                    }
                                                                },
                                                                "id": 75,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberLocation": "863:6:1",
                                                                "memberName": "sender",
                                                                "nodeType": "MemberAccess",
                                                                "src": "859:10:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            ],
                                                            "id": 73,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "nodeType": "ElementaryTypeNameExpression",
                                                            "src": "851:7:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_address_$",
                                                                "typeString": "type(address)"
                                                            },
                                                            "typeName": {
                                                                "id": 72,
                                                                "name": "address",
                                                                "nodeType": "ElementaryTypeName",
                                                                "src": "851:7:1",
                                                                "typeDescriptions": {}
                                                            }
                                                        },
                                                        "id": 76,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "typeConversion",
                                                        "lValueRequested": false,
                                                        "nameLocations": [],
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "851:19:1",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 71,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "843:8:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_payable_$",
                                                        "typeString": "type(address payable)"
                                                    },
                                                    "typeName": {
                                                        "id": 70,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "843:8:1",
                                                        "stateMutability": "payable",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 77,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "843:28:1",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            "id": 78,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "872:8:1",
                                            "memberName": "transfer",
                                            "nodeType": "MemberAccess",
                                            "src": "843:37:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                                "typeString": "function (uint256)"
                                            }
                                        },
                                        "id": 80,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "843:46:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 81,
                                    "nodeType": "ExpressionStatement",
                                    "src": "843:46:1"
                                },
                                {
                                    "eventCall": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 83,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "915:3:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 84,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "919:6:1",
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "915:10:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 85,
                                                "name": "_amount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 60,
                                                "src": "927:7:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 82,
                                            "name": "withdrawTo",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 41,
                                            "src": "904:10:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 86,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "904:31:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 87,
                                    "nodeType": "EmitStatement",
                                    "src": "899:36:1"
                                }
                            ]
                        },
                        "functionSelector": "2e1a7d4d",
                        "id": 89,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "withdraw",
                        "nameLocation": "753:8:1",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 62,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "788:8:1"
                        },
                        "parameters": {
                            "id": 61,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 60,
                                    "mutability": "mutable",
                                    "name": "_amount",
                                    "nameLocation": "770:7:1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 89,
                                    "src": "762:15:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 59,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "762:7:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "761:17:1"
                        },
                        "returnParameters": {
                            "id": 63,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "797:0:1"
                        },
                        "scope": 90,
                        "src": "744:198:1",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    }
                ],
                "scope": 91,
                "src": "387:557:1",
                "usedErrors": [
                    271,
                    276,
                    281,
                    290,
                    295,
                    300
                ],
                "usedEvents": [
                    35,
                    41,
                    1493,
                    1502
                ]
            }
        ],
        "src": "40:905:1"
    },
    "functionHashes": {
        "allowance(address,address)": "dd62ed3e",
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "decimals()": "313ce567",
        "deposit()": "d0e30db0",
        "name()": "06fdde03",
        "symbol()": "95d89b41",
        "totalSupply()": "18160ddd",
        "transfer(address,uint256)": "a9059cbb",
        "transferFrom(address,address,uint256)": "23b872dd",
        "withdraw(uint256)": "2e1a7d4d"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "391000",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "allowance(address,address)": "2790",
            "approve(address,uint256)": "24325",
            "balanceOf(address)": "2537",
            "decimals()": "263",
            "deposit()": "51654",
            "name()": "infinite",
            "symbol()": "infinite",
            "totalSupply()": "2300",
            "transfer(address,uint256)": "50930",
            "transferFrom(address,address,uint256)": "75527",
            "withdraw(uint256)": "infinite"
        }
    }
}